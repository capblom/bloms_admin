"use strict";(()=>{var e={};e.id=756,e.ids=[756],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4261:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>l,staticGenerationAsyncStorage:()=>d});var s={};t.r(s),t.d(s,{GET:()=>p});var a=t(9303),n=t(8716),i=t(670),o=t(7070);let u=new(t(3524)).PrismaClient;async function p(){try{let e=(await u.user.findMany({select:{username:!0}})).map(e=>e.username);return o.NextResponse.json(e)}catch(e){return o.NextResponse.json({error:"Internal server error"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/fetchUserNames/route",pathname:"/api/fetchUserNames",filename:"route",bundlePath:"app/api/fetchUserNames/route"},resolvedPagePath:"/Users/chris/bloms_admin/bloms_admin/app/api/fetchUserNames/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:d,serverHooks:l}=c,h="/api/fetchUserNames/route";function x(){return(0,i.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:d})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972],()=>t(4261));module.exports=s})();